stages:
  - build
  - test
  - image

variables:
  PUBLIC_REGISTRY_HOST: docker.io
  PUBLIC_REGISTRY_OWNER: cybertmt
  PUBLIC_REGISTRY_APP_NAME: 39_go_ci

build_app:
  stage: build
  image: golang:1.15
  script:
    - CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o ./${PUBLIC_REGISTRY_APP_NAME} ./

test:
  stage: test
  image: golang:1.15
  script:
    - go test -v ./...
    - echo "Tests finished"

lint:
  stage: test
  image: golang:1.15
  script:
    - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.41.1
    - golangci-lint --version
    - golangci-lint run
  allow_failure: true

build_image:stable:
  stage: image
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "No build image commands!!!${PUBLIC_REGISTRY_PASSOWRD}"
    - docker login -u ${PUBLIC_REGISTRY_OWNER} -p ${PUBLIC_REGISTRY_PASSOWRD} ${PUBLIC_REGISTRY_HOST}
    - docker build -t "${PUBLIC_REGISTRY_APP_NAME}" .
    - docker push cybertmt/${PUBLIC_REGISTRY_APP_NAME}:${CI_COMMIT_REF_NAME}
  only:
    - master

build_image:latest:
  stage: image
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "No build image commands!!!"
    - docker login -u ${PUBLIC_REGISTRY_OWNER} -p ${PUBLIC_REGISTRY_PASSOWRD} ${PUBLIC_REGISTRY_HOST}
    - docker build -t "${PUBLIC_REGISTRY_APP_NAME}" .
    - docker push cybertmt/${PUBLIC_REGISTRY_APP_NAME}:latest
  when: manual
